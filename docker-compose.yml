version: "3.7"

volumes:
  postgres:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/database/postgres

services:
  redis:
    image: redis:latest
    container_name: wagtail-redis

  db:
    image: postgres:11
    container_name: wagtail-db
    volumes:
      - postgres:/var/lib/postgresql/data
    tty: true
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: userdb
      POSTGRES_DB: wagtaildb
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    security_opt:
      - seccomp:unconfined

  vue:
    build:
      context: ./vue
      dockerfile: Dockerfile
      args:
        AWS_ACCESS: ${AWS_ACCESS_NUXT}
        AWS_SECRET: ${AWS_SECRET_NUXT}
        AWS_REGION: ${AWS_REGION}
    container_name: wagtail-vue
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_NUXT}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_NUXT}
      - AWS_DEFAULT_REGION=${AWS_REGION}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
      - AWS_CLOUDFRONT=${AWS_CLOUDFRONT}
      - BASE_URL=0.0.0.0:7000
    volumes:
      - ./vue:/app/vue
      - /app/vue/node_modules
    ports:
      - 80:80
    command: >
      bash -c "npm run serve -- --port 80 --spa"

  web:
    build:
      context: ./django
      dockerfile: Dockerfile
      target: base-develop
      args:
        AWS_ACCESS: ${AWS_ACCESS}
        AWS_SECRET: ${AWS_SECRET}
        AWS_REGION: ${AWS_REGION}
    container_name: wagtail
    tty: true
    depends_on:
      - redis
      - db
      - vue
    volumes:
      - ./django:/webapps/django
      - ./django/ansible:/tmp/ansible
    ports:
      - 23:22
      - 7000:80 # backend
      - 7001:8080 # Apache Airflow
      - 7002:5555 # flower & celery
      - 7003:7000 # ./manage.py runserver
      - 7004:7001 # ./manage.py shell_plus --notebook
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
      - SECRET_KEY=${SECRET_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET}
      - AWS_DEFAULT_REGION=${AWS_REGION}
    command: >
      sh -c "wait-for-it db:5432 --strict --timeout=60 -- django-migrate &&
            poetry lock --no-update &&
            poetry export -n --without-hashes -f requirements.txt -o ./requirements.txt &&
            service supervisor start &&
            supervisorctl reread &&
            supervisorctl update &&
            supervisorctl start all &&
            service ssh start &&
            service nginx start &&
            bash"
